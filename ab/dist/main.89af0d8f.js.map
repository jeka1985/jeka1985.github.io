{"version":3,"sources":["js/main.js"],"names":["document","addEventListener","observable","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","threshold","node","window","scrollY","getBoundingClientRect","top","requestAnimationFrame","observe"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAaF,SAASG,iBAAiB,kBAEvCC,EAAW,IAAIC,qBAAqB,SAACC,GACzCA,EAAQC,QAAQ,SAAAC,GACTA,EAAMC,iBACPD,EAAME,OAAOC,UAAUC,IAAI,mBAC3BR,EAASS,UAAUL,EAAME,YAG9B,CACDI,UAAW,MAGbZ,EAAWK,QAAQ,SAAAQ,GACbC,OAAOC,QAAUF,EAAKG,wBAAwBC,KAChDC,sBAAsB,WACpBL,EAAKJ,UAAUC,IAAI,qBAIvBR,EAASiB,QAAQN","file":"main.89af0d8f.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const observable = document.querySelectorAll('.js-observable');\n  \n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n        if(entry.isIntersecting) {\n          entry.target.classList.add('js-intersecting');\n          observer.unobserve(entry.target)\n        }\n    });\n  }, {\n    threshold: 0.25\n  });\n\n  observable.forEach(node => {\n    if (window.scrollY > node.getBoundingClientRect().top) {\n      requestAnimationFrame(() => {\n        node.classList.add('js-intersecting');\n      });\n    }\n\n    observer.observe(node)\n  });\n})"]}